{"version":3,"sources":["Components/Sidebar/Sidebar.tsx","Components/RepoContent/RepoContent.tsx","Components/ProjectContent/ProjectContent.tsx","Components/ContributionContent/ContributionContent.tsx","Components/InterestContent/InterestContent.tsx","App.tsx","index.tsx"],"names":["Sidebar","props","state","name","email","profilePictureUrl","description","githubUrl","githubUsername","githubLocation","linkedInUsername","instagramUsername","a","octokit","Octokit","rest","users","getByUsername","username","user","this","setState","data","avatar_url","bio","html_url","login","location","Avatar","src","style","width","height","marginBottom","Typography","variant","align","paddingBottom","display","alignItems","paddingRight","size","Link","href","target","rel","fontSize","Component","RepoContent","languagesToColors","Map","Object","entries","LinguistLanguages","loading","repositories","repos","listForUser","sort","type","response","filter","r","fork","slice","map","repo","Grid","item","Card","CardContent","flexDirection","flex","paddingTop","color","getColorForLanguage","language","id","has","get","ProjectContent","projects","url","project","paddingLeft","ContributionContent","contributions","owner","pullNumber","Promise","all","contribution","pulls","pull_number","c","base","title","InterestContent","interests","topicUrl","logoUrl","interest","justifyContent","alt","drawerWidth","useStyles","makeStyles","theme","createStyles","root","drawer","breakpoints","up","flexShrink","appBar","background","palette","default","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","padding","content","flexGrow","App","classes","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","className","CssBaseline","Hidden","mdUp","AppBar","position","elevation","Toolbar","IconButton","edge","onClick","Drawer","anchor","open","onClose","paper","ModalProps","keepMounted","smDown","Container","maxWidth","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.538cbf1f.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\nimport { Avatar, Link, Typography } from '@material-ui/core';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { LocationIcon, MailIcon, MarkGithubIcon } from '@primer/octicons-react';\nimport { Octokit } from 'octokit';\n\ninterface SidebarProps {}\n\ninterface SidebarState {\n  name: string;\n  email: string;\n  profilePictureUrl: string;\n  description: string;\n  githubUrl: string;\n  githubUsername: string;\n  githubLocation: string;\n  linkedInUsername: string;\n  instagramUsername: string;\n}\n\nexport class Sidebar extends Component<SidebarProps, SidebarState> {\n  constructor(props: SidebarProps) {\n    super(props);\n    this.state = {\n      name: '',\n      email: 'contact@xsalazar.com',\n      profilePictureUrl: '',\n      description: '',\n      githubUrl: '',\n      githubUsername: '',\n      githubLocation: '',\n      linkedInUsername: 'xsalazar',\n      instagramUsername: 'xsalazar3',\n    };\n  }\n\n  async componentDidMount(): Promise<void> {\n    const octokit = new Octokit();\n    const user = await octokit.rest.users.getByUsername({\n      username: 'xsalazar',\n    });\n    this.setState({\n      name: user.data.name as string,\n      profilePictureUrl: user.data.avatar_url as string,\n      description: user.data.bio as string,\n      githubUrl: user.data.html_url as string,\n      githubUsername: user.data.login as string,\n      githubLocation: user.data.location as string,\n    });\n  }\n\n  render(): ReactNode {\n    return (\n      <div>\n        {/* Icon */}\n        <Avatar src={this.state.profilePictureUrl} style={{ width: '150px', height: '150px', marginBottom: '25px' }}></Avatar>\n\n        {/* Name */}\n        <Typography variant=\"h4\" align=\"left\" style={{ paddingBottom: '15px' }}>\n          {this.state.name}\n        </Typography>\n\n        {/* Bio */}\n        <Typography variant=\"body1\" align=\"left\" style={{ paddingBottom: '15px' }}>\n          {this.state.description}\n        </Typography>\n\n        {/* Location */}\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            paddingBottom: '10px',\n          }}\n        >\n          <div style={{ paddingRight: '5px' }}>\n            <LocationIcon size={20}></LocationIcon>\n          </div>\n          <Typography>{this.state.githubLocation}</Typography>\n        </div>\n\n        {/* GitHub Link */}\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            paddingBottom: '10px',\n          }}\n        >\n          <div style={{ paddingRight: '5px' }}>\n            <MarkGithubIcon size={20}></MarkGithubIcon>\n          </div>\n          <Link href={this.state.githubUrl} target=\"_blank\" rel=\"noopener\">\n            GitHub\n          </Link>\n        </div>\n\n        {/* LinkedIn Link */}\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            paddingBottom: '10px',\n          }}\n        >\n          <div style={{ paddingRight: '5px' }}>\n            <LinkedInIcon style={{ fontSize: '20px' }}></LinkedInIcon>\n          </div>\n          <Link href={`https://www.linkedin.com/in/${this.state.linkedInUsername}`} target=\"_blank\" rel=\"noopener\">\n            LinkedIn\n          </Link>\n        </div>\n\n        {/* Instagram Link */}\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            paddingBottom: '10px',\n          }}\n        >\n          <div style={{ paddingRight: '5px' }}>\n            <InstagramIcon fontSize=\"large\" style={{ fontSize: '20px' }}></InstagramIcon>\n          </div>\n          <Link href={`https://www.instagram.com/${this.state.instagramUsername}`} target=\"_blank\" rel=\"noopener\">\n            Instagram\n          </Link>\n        </div>\n\n        {/* Mail Link */}\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            paddingBottom: '10px',\n          }}\n        >\n          <div style={{ paddingRight: '5px' }}>\n            <MailIcon size={20}></MailIcon>\n          </div>\n          <Link href={`mailto:${this.state.email}`}>contact@xsalazar.com</Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Card, CardContent, Grid, Link, Typography } from '@material-ui/core';\nimport { DotFillIcon, RepoIcon } from '@primer/octicons-react';\nimport { Octokit } from 'octokit';\nimport { Component, ReactNode } from 'react';\nimport LinguistLanguages from 'linguist-languages';\n\ninterface RepoContentProps {}\n\ninterface RepoContentState {\n  loading: boolean;\n  repositories: any[];\n}\n\nexport class RepoContent extends Component<RepoContentProps, RepoContentState> {\n  languagesToColors: Map<string, LinguistLanguages.Language> = new Map(Object.entries(LinguistLanguages));\n\n  constructor(props: RepoContentProps) {\n    super(props);\n    this.state = {\n      loading: true,\n      repositories: [],\n    };\n  }\n\n  async componentDidMount(): Promise<void> {\n    const octokit = new Octokit();\n    let response = await octokit.rest.repos.listForUser({\n      username: 'xsalazar',\n      sort: 'pushed',\n      type: 'owner',\n    });\n\n    const repositories = response.data.filter((r) => !r.fork).slice(0, 6);\n\n    this.setState({\n      repositories: repositories,\n      loading: false,\n    });\n  }\n\n  render(): ReactNode {\n    if (this.state.loading) {\n      return <div></div>;\n    }\n\n    return this.state.repositories.map((repo) => {\n      return (\n        <Grid item key={repo.id}>\n          <Card variant=\"outlined\" style={{ width: '300px', height: '100%', display: 'flex' }}>\n            <CardContent style={{ display: 'flex', flexDirection: 'column' }}>\n              {/* Title */}\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  paddingBottom: '10px',\n                }}\n              >\n                <div style={{ paddingRight: '5px' }}>\n                  <RepoIcon size=\"small\" />\n                </div>\n                <Link href={repo.html_url} target=\"_blank\" rel=\"noopener\">\n                  {repo.name}\n                </Link>\n              </div>\n\n              {/* Description */}\n              <div style={{ flex: 1 }}>\n                <Typography variant=\"body2\">{repo.description}</Typography>\n              </div>\n\n              {/* Language */}\n              <div style={{ paddingTop: '15px' }}>\n                <span style={{ color: this.getColorForLanguage(repo.language) }}>\n                  <DotFillIcon size=\"small\" />\n                </span>\n                <Typography variant=\"caption\">{repo.language}</Typography>\n              </div>\n            </CardContent>\n          </Card>\n        </Grid>\n      );\n    });\n  }\n\n  getColorForLanguage(language: string): string {\n    if (this.languagesToColors.has(language)) {\n      return this.languagesToColors.get(language)?.color ?? '#aaaaaa';\n    } else {\n      return '#aaaaaa';\n    }\n  }\n}\n","import { Card, CardContent, Grid, Link, Typography } from '@material-ui/core';\nimport PublicIcon from '@material-ui/icons/Public';\nimport { LinkIcon } from '@primer/octicons-react';\nimport { Component, ReactNode } from 'react';\n\ninterface Project {\n  name: string;\n  description: string;\n  url: string;\n}\n\nexport class ProjectContent extends Component {\n  projects: Array<Project> = [\n    {\n      name: 'Learn Emoji',\n      description: 'A simple guessing game for learning the emoji :short_names: on websites such as GitHub, Slack, Discord, and more!',\n      url: 'https://learnemoji.dev',\n    },\n    {\n      name: 'Lyman Art',\n      description: 'Andrew Lyman original artwork, created as a static Jekyll website with image optimization',\n      url: 'https://ablyman.com',\n    },\n    {\n      name: 'Personal Website',\n      description:\n        'A website for showcasing my programming portfolio, including a number of projects, open source contributions, and contact information',\n      url: 'https://xsalazar.com',\n    },\n  ];\n\n  render(): ReactNode {\n    return this.projects.map((project) => {\n      return (\n        <Grid item key={project.name}>\n          <Card variant=\"outlined\" style={{ width: '300px', height: '100%', display: 'flex' }}>\n            <CardContent style={{ display: 'flex', flexDirection: 'column' }}>\n              {/* Title */}\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  paddingBottom: '10px',\n                }}\n              >\n                <PublicIcon style={{ fontSize: '16px' }} />\n                <Link href={project.url} target=\"_blank\" rel=\"noopener\" style={{ paddingLeft: '5px' }}>\n                  {project.name}\n                </Link>\n              </div>\n\n              {/* Description */}\n              <div style={{ flex: 1 }}>\n                <Typography variant=\"body2\">{project.description}</Typography>\n              </div>\n\n              {/* Link */}\n              <div style={{ paddingTop: '15px' }}>\n                <LinkIcon size=\"small\" />\n                <Link href={project.url} target=\"_blank\" rel=\"noopener\" style={{ paddingLeft: '5px' }}>\n                  {project.url}\n                </Link>\n              </div>\n            </CardContent>\n          </Card>\n        </Grid>\n      );\n    });\n  }\n}\n","import { Card, CardContent, Grid, Link, Typography } from '@material-ui/core';\nimport { DotFillIcon, GitMergeIcon } from '@primer/octicons-react';\nimport { Octokit } from 'octokit';\nimport { Component, ReactNode } from 'react';\nimport LinguistLanguages from 'linguist-languages';\n\ninterface ContributionContentProps {}\n\ninterface ContributionContentState {\n  loading: boolean;\n  contributions: any[];\n}\n\ninterface Contribution {\n  owner: string;\n  repo: string;\n  pullNumber: number;\n}\n\nexport class ContributionContent extends Component<ContributionContentProps, ContributionContentState> {\n  languagesToColors: Map<string, LinguistLanguages.Language> = new Map(Object.entries(LinguistLanguages));\n\n  contributions: Array<Contribution> = [\n    {\n      owner: 'hashicorp',\n      repo: 'terraform-provider-aws',\n      pullNumber: 11984,\n    },\n    {\n      owner: 'hashicorp',\n      repo: 'terraform-provider-aws',\n      pullNumber: 10175,\n    },\n    {\n      owner: 'hashicorp',\n      repo: 'terraform-provider-aws',\n      pullNumber: 10017,\n    },\n    {\n      owner: 'hashicorp',\n      repo: 'terraform-provider-aws',\n      pullNumber: 10015,\n    },\n    {\n      owner: 'hashicorp',\n      repo: 'terraform-provider-aws',\n      pullNumber: 17625,\n    },\n    { owner: 'dependabot', repo: 'fetch-metadata', pullNumber: 34 },\n    {\n      owner: 'glennjones',\n      repo: 'hapi-swagger',\n      pullNumber: 727,\n    },\n    {\n      owner: 'glennjones',\n      repo: 'hapi-swagger',\n      pullNumber: 728,\n    },\n  ];\n\n  constructor(props: ContributionContentProps) {\n    super(props);\n    this.state = {\n      loading: true,\n      contributions: [],\n    };\n  }\n\n  async componentDidMount(): Promise<void> {\n    const octokit = new Octokit();\n\n    const c = await Promise.all(\n      this.contributions.map(async (contribution) => {\n        let response = await octokit.rest.pulls.get({\n          owner: contribution.owner,\n          repo: contribution.repo,\n          pull_number: contribution.pullNumber,\n        });\n        return response.data;\n      })\n    );\n\n    this.setState({ loading: false, contributions: c });\n  }\n\n  render(): ReactNode {\n    if (this.state.loading) {\n      return <div></div>;\n    }\n\n    return this.state.contributions.map((contribution) => {\n      return (\n        <Grid item key={contribution.id}>\n          <Card variant=\"outlined\" style={{ width: '300px', height: '100%', display: 'flex' }}>\n            <CardContent style={{ display: 'flex', flexDirection: 'column' }}>\n              {/* Title */}\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  paddingBottom: '10px',\n                }}\n              >\n                <div style={{ paddingRight: '5px' }}>\n                  <GitMergeIcon size=\"small\" />\n                </div>\n                <Link href={contribution.html_url} target=\"_blank\" rel=\"noopener\">\n                  {contribution.base.repo.name}\n                </Link>\n              </div>\n\n              {/* Description */}\n              <div style={{ flex: 1 }}>\n                <Typography variant=\"body2\">{contribution.title}</Typography>\n              </div>\n\n              {/* Language */}\n              <div style={{ paddingTop: '15px' }}>\n                <span\n                  style={{\n                    color: this.getColorForLanguage(contribution.base.repo.language),\n                  }}\n                >\n                  <DotFillIcon size=\"small\" />\n                </span>\n                <Typography variant=\"caption\">{contribution.base.repo.language}</Typography>\n              </div>\n            </CardContent>\n          </Card>\n        </Grid>\n      );\n    });\n  }\n\n  getColorForLanguage(language: string): string {\n    if (this.languagesToColors.has(language)) {\n      return this.languagesToColors.get(language)?.color ?? '#aaaaaa';\n    } else {\n      return '#aaaaaa';\n    }\n  }\n}\n","import { Card, CardContent, Grid, Link, Typography } from '@material-ui/core';\nimport { Component, ReactNode } from 'react';\n\ninterface Interest {\n  title: string;\n  logoUrl: string;\n  topicUrl: string;\n}\n\nexport class InterestContent extends Component {\n  interests: Array<Interest> = [\n    {\n      title: 'AWS',\n      topicUrl: 'https://github.com/topics/aws',\n      logoUrl: 'https://raw.githubusercontent.com/github/explore/fbceb94436312b6dacde68d122a5b9c7d11f9524/topics/aws/aws.png',\n    },\n    {\n      title: 'Terraform',\n      topicUrl: 'https://github.com/topics/terraform',\n      logoUrl: 'https://www.terraform.io/assets/images/product-icons/terraform-icon-color-7fbc9ecc.svg',\n    },\n    {\n      title: 'Typescript',\n      topicUrl: 'https://github.com/topics/typescript',\n      logoUrl: 'https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/typescript/typescript.png',\n    },\n    {\n      title: 'React',\n      topicUrl: 'https://github.com/topics/react',\n      logoUrl: 'https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/react/react.png',\n    },\n    {\n      title: 'Go',\n      topicUrl: 'https://github.com/topics/go',\n      logoUrl: 'https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/go/go.png',\n    },\n    {\n      title: '.NET',\n      topicUrl: 'https://github.com/topics/dotnet',\n      logoUrl: 'https://raw.githubusercontent.com/github/explore/93d8a67084f94b2a444e510199a6e7622e5b09a3/topics/dotnet/dotnet.png',\n    },\n  ];\n\n  render(): ReactNode {\n    return this.interests.map((interest) => {\n      return (\n        <Grid item key={interest.title}>\n          <Link href={interest.topicUrl} target=\"_blank\" rel=\"noopener\">\n            <Card\n              variant=\"outlined\"\n              style={{\n                width: '300px',\n                height: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              <CardContent\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                }}\n              >\n                {/* Image */}\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    paddingBottom: '10px',\n                  }}\n                >\n                  <img src={interest.logoUrl} alt={interest.title} style={{ width: '64px', height: '64px' }} />\n                </div>\n\n                {/* Title */}\n                <Typography>{interest.title}</Typography>\n              </CardContent>\n            </Card>\n          </Link>\n        </Grid>\n      );\n    });\n  }\n}\n","import {\n  AppBar,\n  Container,\n  createStyles,\n  Drawer,\n  Grid,\n  Hidden,\n  IconButton,\n  makeStyles,\n  Theme,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\nimport './App.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Sidebar } from './Components/Sidebar/Sidebar';\nimport { RepoContent } from './Components/RepoContent/RepoContent';\nimport { ProjectContent } from './Components/ProjectContent/ProjectContent';\nimport { ContributionContent } from './Components/ContributionContent/ContributionContent';\nimport { InterestContent } from './Components/InterestContent/InterestContent';\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up('md')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      background: theme.palette.background.default,\n      [theme.breakpoints.up('md')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      padding: '40px',\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n);\n\nexport default function App() {\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Hidden mdUp>\n        <AppBar position=\"fixed\" className={classes.appBar} color=\"default\" elevation={0}>\n          <Toolbar>\n            <IconButton color=\"inherit\" edge=\"start\" onClick={handleDrawerToggle} className={classes.menuButton}>\n              <MenuIcon />\n            </IconButton>\n            <Typography>Xavier Salazar - Software Engineer</Typography>\n          </Toolbar>\n        </AppBar>\n      </Hidden>\n      <nav className={classes.drawer}>\n        <Hidden mdUp>\n          <Drawer\n            variant=\"temporary\"\n            anchor=\"left\"\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            <Sidebar></Sidebar>\n          </Drawer>\n        </Hidden>\n        <Hidden smDown>\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            <Sidebar></Sidebar>\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Container style={{ maxWidth: '1000px' }}>\n          {/* My Repositories */}\n          <Grid style={{ paddingBottom: '25px' }}>\n            <Typography variant=\"h5\">My Projects</Typography>\n            <Typography variant=\"body1\" color=\"textSecondary\" style={{ paddingBottom: '15px' }}>\n              GitHub repositories that I've built.\n            </Typography>\n            <Grid container spacing={2}>\n              <RepoContent></RepoContent>\n            </Grid>\n          </Grid>\n\n          {/* My Published Projects */}\n          <Grid style={{ paddingBottom: '25px' }}>\n            <Typography variant=\"body1\" color=\"textSecondary\" style={{ paddingBottom: '15px' }}>\n              Projects I've Published.\n            </Typography>\n            <Grid container spacing={2}>\n              <ProjectContent></ProjectContent>\n            </Grid>\n          </Grid>\n\n          {/* My Contributions */}\n          <Grid style={{ paddingBottom: '25px' }}>\n            <Typography variant=\"h5\">My Contributions</Typography>\n            <Typography variant=\"body1\" color=\"textSecondary\" style={{ paddingBottom: '15px' }}>\n              Open source contributions I've made.\n            </Typography>\n            <Grid container spacing={2}>\n              <ContributionContent></ContributionContent>\n            </Grid>\n          </Grid>\n\n          {/* My Interests */}\n          <Grid style={{ paddingBottom: '25px' }}>\n            <Typography variant=\"h5\">My Interests</Typography>\n            <Typography variant=\"body1\" color=\"textSecondary\" style={{ paddingBottom: '15px' }}>\n              Topics that I want to learn more about.\n            </Typography>\n            <Grid container spacing={2}>\n              <InterestContent></InterestContent>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}